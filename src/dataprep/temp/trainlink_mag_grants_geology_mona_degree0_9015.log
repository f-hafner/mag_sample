Namespace(testing=False, verbose=1, field=['geology'], train_name='mona_degree0', startyear=1990, endyear=2015, loadstartyear=1990, loadendyear=2015, mergemode='m:1', recall=0.9, institution='True', fieldofstudy_cat='False', fieldofstudy_str='False', keywords='False', retrain='True', linking_type='grants', samplesize=100000, write_to='database')
Have max 12 cores available
Testing is False 

I set the write connection to the main database.
id_field is [127313418] and will be passed to sql queries.
finished setup ... 
Time elapsed: 0.0004318873087565104 minutes 


        SELECT a.GrantID || "_" || c.author_position as grantid_authorposition
            , CAST(SUBSTR(a.Award_AwardEffectiveDate, 7, 4) AS INT) AS year_range
            , b.institution, c.firstname, c.lastname, c.middlename
            , '' AS keywords, '' AS coauthors -- # necessary for current code structure
            , CAST(SUBSTR(a.Award_AwardEffectiveDate, 7, 4) AS INT) || "//" || b.institution AS main_us_institutions_year
            , CAST(SUBSTR(a.Award_AwardEffectiveDate, 7, 4) AS INT) || "//" || b.institution AS all_us_institutions_year
        FROM NSF_MAIN as a 
        INNER JOIN (
            SELECT GrantID, Name AS institution
            FROM NSF_Institution
            WHERE Position = 0 -- take the first reported. otherwise possibly duplicates. NSF_Performance_Institution has some missing. https://github.com/chrished/science_career_RAs/issues/19
        ) b 
        USING (GrantID)
        INNER JOIN (
            SELECT GrantID
                , FirstName AS firstname
                , LastName AS lastname
                , PIMidInit AS middlename --# NOTE: PISufxName is often "Jr", "Mr", JR, ... 
                , Position as author_position --## Some grants have >1 PIs
            FROM NSF_Investigator
            WHERE RoleCode = 'principal investigator'
        ) c
        USING (GrantID)
        WHERE AWARD_TranType = 'grant' AND AWARD_Agency = 'nsf' 
            AND a.AwardInstrument_Value IN ('standard grant', 'continuing grant')
            AND a.Organization_Directorate_ShortName IN ('GEOSCIENCES')
            AND c.lastname != 'data not available'
            AND CAST(SUBSTR(a.Award_AwardEffectiveDate, 7, 4) AS INT) >= 1990
            AND CAST(SUBSTR(a.Award_AwardEffectiveDate, 7, 4) AS INT) <= 2015
            AND b.institution != "travel award"
         


    SELECT f.AuthorId
        , f.year
        , f.YearLastPub
        , f.firstname
        , f.lastname
        , CASE TRIM(SUBSTR(f.middle_lastname, 1, f.l_fullname - f.l_firstname - f.l_lastname - 1)) 
            WHEN 
                "" THEN NULL 
                ELSE TRIM(SUBSTR(f.middle_lastname, 1, f.l_fullname - f.l_firstname - f.l_lastname - 1)) 
            END as middlename 
            -- ## NOTE this gives "" for middlename when it is missing 
        , f.fieldofstudy
        , g.keywords
        , g.coauthors
        , g.institution
        , g.main_us_institutions_year
         
        , f.year || ";" || f.YearLastPub AS year_range 
        , g.all_us_institutions_year
    
    FROM (
        SELECT a.AuthorId
            , a.YearFirstPub AS year
            , a.YearLastPub 
            , a.FirstName AS firstname
            , REPLACE(b.NormalizedName, RTRIM(b.NormalizedName, REPLACE(b.NormalizedName, " ", "")), "") AS lastname 
                    -- https://stackoverflow.com/questions/21388820/how-to-get-the-last-index-of-a-substring-in-sqlite
            , TRIM(SUBSTR(b.NormalizedName, length(a.FirstName) + 1)) AS middle_lastname 
                    -- this gives all except the first name 
            , length(b.NormalizedName) as l_fullname 
            , length(a.FirstName) as l_firstname
            , length(REPLACE(b.NormalizedName, RTRIM(b.NormalizedName, REPLACE(b.NormalizedName, " ", "")), "")) as l_lastname
            , e.NormalizedName AS fieldofstudy
        FROM author_sample AS a
        INNER JOIN (
            SELECT AuthorId, NormalizedName
            FROM Authors
        ) AS b USING(AuthorId)
        INNER JOIN (
            SELECT AuthorId
            FROM author_field0
            WHERE FieldOfStudyId_lvl0 IN (?)
                AND Degree <= 0
        ) USING(AuthorId)
        LEFT JOIN (
            SELECT AuthorId, NormalizedName
            FROM author_fields c
            INNER JOIN (
                SELECT FieldOfStudyId, NormalizedName
                FROM FieldsOfStudy
            ) AS d USING(FieldOfStudyId)
            -- ## Condition on fieldofstudy being in the level 0 id_field
            INNER JOIN (
                SELECT ParentFieldOfStudyId, ChildFieldOfStudyId
                FROM crosswalk_fields
                WHERE ParentLevel = 0
                    AND ParentFieldOfStudyId IN (?)
            ) AS e ON (e.ChildFieldOfStudyId = c.FieldOfStudyId)
            WHERE FieldClass = 'first'
        ) AS e USING(AuthorId)
    ) f
    LEFT JOIN (
        SELECT AuthorId
                , main_us_institutions_career as institution
                , coauthors
                , keywords
                , main_us_institutions_year
                , all_us_institutions_year
        FROM author_info_linking
    ) AS g USING(AuthorId)
    
    WHERE f.YearLastPub  >= 1990 - 5 AND year <= 2015 + 5 AND institution is not NULL
     

An error occurred when calling compare_range_from_tuple((2012, 2021), (2012, 2021)). I cannot print the type, but most likely a TypeError or ValueError.
An error occurred when calling compare_range_from_tuple((1996, 1998), (1996, 1998)). I cannot print the type, but most likely a TypeError or ValueError.
An error occurred when calling compare_range_from_tuple((1996, 1998), (1996, 1998)). I cannot print the type, but most likely a TypeError or ValueError.
An error occurred when calling compare_range_from_tuple((1996, 1998), (1996, 1998)). I cannot print the type, but most likely a TypeError or ValueError.
An error occurred when calling compare_range_from_tuple((1996, 1998), (1996, 1998)). I cannot print the type, but most likely a TypeError or ValueError.
An error occurred when calling compare_range_from_tuple((1996, 1998), (1996, 1998)). I cannot print the type, but most likely a TypeError or ValueError.
An error occurred when calling compare_range_from_tuple((1996, 1998), (1996, 1998)). I cannot print the type, but most likely a TypeError or ValueError.
An error occurred when calling compare_range_from_tuple((1996, 1998), (1996, 1998)). I cannot print the type, but most likely a TypeError or ValueError.
An error occurred when calling compare_range_from_tuple((1996, 1998), (1996, 1998)). I cannot print the type, but most likely a TypeError or ValueError.
Time elapsed: 18.312536994616192 minutes 

Starting active labeling...
firstname : john
lastname : marra
middlename : None
year_range : (1978, 2021)
main_us_institutions_year : ((1982, 'columbia university'), (1984, 'columbia university'), (1986, 'columbia university'), (1988, 'columbia university'), (1989, 'columbia university'), (1991, 'columbia university'), (1993, 'columbia university'), (1995, 'lamont doherty earth observatory'), (1996, 'lamont doherty earth observatory'), (1998, 'lamont doherty earth observatory'), (1999, 'lamont doherty earth observatory'), (2000, 'lamont doherty earth observatory'), (2001, 'lamont doherty earth observatory'), (2002, 'lamont doherty earth observatory'), (2003, 'lamont doherty earth observatory'), (2004, 'lamont doherty earth observatory'), (2005, 'lamont doherty earth observatory'), (2006, 'lamont doherty earth observatory'), (2007, 'lamont doherty earth observatory'), (2009, 'city university of new york'), (2009, 'lamont doherty earth observatory'), (2010, 'city university of new york'), (2011, 'city university of new york'), (2012, 'city university of new york'), (2013, 'lamont doherty earth observatory'), (2014, 'city university of new york'), (2015, 'city university of new york'), (2016, 'city university of new york'), (2018, 'brooklyn college'), (2019, 'brooklyn college'), (2021, 'city university of new york'), (2021, 'brooklyn college'))
all_us_institutions_year : ((1982, 'columbia university'), (1984, 'columbia university'), (1986, 'columbia university'), (1987, 'columbia university'), (1988, 'columbia university'), (1989, 'columbia university'), (1990, 'columbia university'), (1991, 'columbia university'), (1992, 'columbia university'), (1993, 'columbia university'), (1993, 'lamont doherty earth observatory'), (1994, 'columbia university'), (1995, 'columbia university'), (1995, 'lamont doherty earth observatory'), (1996, 'lamont doherty earth observatory'), (1997, 'columbia university'), (1997, 'lamont doherty earth observatory'), (1998, 'columbia university'), (1998, 'lamont doherty earth observatory'), (1999, 'lamont doherty earth observatory'), (2000, 'lamont doherty earth observatory'), (2001, 'lamont doherty earth observatory'), (2002, 'lamont doherty earth observatory'), (2003, 'lamont doherty earth observatory'), (2004, 'lamont doherty earth observatory'), (2005, 'lamont doherty earth observatory'), (2006, 'lamont doherty earth observatory'), (2007, 'lamont doherty earth observatory'), (2009, 'brooklyn college'), (2009, 'city university of new york'), (2009, 'lamont doherty earth observatory'), (2010, 'city university of new york'), (2011, 'city university of new york'), (2012, 'brooklyn college'), (2012, 'city university of new york'), (2013, 'lamont doherty earth observatory'), (2014, 'brooklyn college'), (2014, 'city university of new york'), (2015, 'brooklyn college'), (2015, 'city university of new york'), (2016, 'city university of new york'), (2018, 'brooklyn college'), (2018, 'the graduate center cuny'), (2019, 'brooklyn college'), (2021, 'brooklyn college'), (2021, 'city university of new york'))

firstname : john
lastname : marra
middlename : None
year_range : (1996,)
main_us_institutions_year : ((1996, 'columbia university'),)
all_us_institutions_year : ((1996, 'columbia university'),)

0/10 positive, 0/10 negative
Do these records refer to the same thing?
(y)es / (n)o / (u)nsure / (f)inished
