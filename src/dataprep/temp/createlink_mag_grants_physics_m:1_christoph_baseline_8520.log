/home/christoph/anaconda3/envs/science-career-tempenv/lib/python3.9/site-packages/numpy/core/getlimits.py:500: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/christoph/anaconda3/envs/science-career-tempenv/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
/home/christoph/anaconda3/envs/science-career-tempenv/lib/python3.9/site-packages/numpy/core/getlimits.py:500: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  setattr(self, word, getattr(machar, word).flat[0])
/home/christoph/anaconda3/envs/science-career-tempenv/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.
  return self._float_to_str(self.smallest_subnormal)
Namespace(testing=False, verbose=1, field=['physics'], train_name='christoph_baseline', startyear=1985, endyear=2020, mergemode='m:1', recall=0.9, institution='True', fieldofstudy_cat='False', fieldofstudy_str='False', keywords='False', retrain='True', linking_type='grants')
Have max 6 cores available
Testing is False 

Preparing temp tables for info of proquest authors... 


        SELECT a.GrantID || "_" || c.author_position as grantid_authorposition
            , CAST(SUBSTR(a.Award_AwardEffectiveDate, 7, 4) AS INT) AS year_range
            , b.institution, c.firstname, c.lastname, c.middlename
            , '' AS keywords, '' AS coauthors -- # necessary for current code structure
            , CAST(SUBSTR(a.Award_AwardEffectiveDate, 7, 4) AS INT) || "//" || b.institution AS main_us_institutions_year
            , CAST(SUBSTR(a.Award_AwardEffectiveDate, 7, 4) AS INT) || "//" || b.institution AS all_us_institutions_year
        FROM NSF_MAIN as a 
        INNER JOIN (
            SELECT GrantID, Name AS institution
            FROM NSF_Institution
            WHERE Position = 0 -- take the first reported. otherwise possibly duplicates. NSF_Performance_Institution has some missing. https://github.com/chrished/science_career_RAs/issues/19
        ) b 
        USING (GrantID)
        INNER JOIN (
            SELECT GrantID
                , FirstName AS firstname
                , LastName AS lastname
                , PIMidInit AS middlename --# NOTE: PISufxName is often "Jr", "Mr", JR, ... 
                , Position as author_position --## Some grants have >1 PIs
            FROM NSF_Investigator
            WHERE RoleCode = 'principal investigator'
        ) c
        USING (GrantID)
        WHERE AWARD_TranType = 'grant' AND AWARD_Agency = 'nsf' 
            AND a.AwardInstrument_Value IN ('standard grant', 'continuing grant')
            AND a.Organization_Directorate_ShortName IN ('MATHEMATICAL & PHYSICAL SCIEN')
            AND c.lastname != 'data not available'
         


    SELECT f.AuthorId
        , f.year
        , f.YearLastPub
        , f.firstname
        , f.lastname
        , CASE TRIM(SUBSTR(f.middle_lastname, 1, f.l_fullname - f.l_firstname - f.l_lastname - 1)) 
            WHEN 
                "" THEN NULL 
                ELSE TRIM(SUBSTR(f.middle_lastname, 1, f.l_fullname - f.l_firstname - f.l_lastname - 1)) 
            END as middlename 
            -- ## NOTE this gives "" for middlename when it is missing 
        , f.fieldofstudy
        , g.keywords
        , g.coauthors
        , g.institution
        , g.main_us_institutions_year
         
            , f.year || ";" || f.YearLastPub AS year_range 
            , g.all_us_institutions_year
        
    FROM (
        SELECT a.AuthorId
            , a.YearFirstPub AS year
            , a.YearLastPub 
            , a.FirstName AS firstname
            , REPLACE(b.NormalizedName, RTRIM(b.NormalizedName, REPLACE(b.NormalizedName, " ", "")), "") AS lastname 
                    -- https://stackoverflow.com/questions/21388820/how-to-get-the-last-index-of-a-substring-in-sqlite
            , TRIM(SUBSTR(b.NormalizedName, length(a.FirstName) + 1)) AS middle_lastname 
                    -- this gives all except the first name 
            , length(b.NormalizedName) as l_fullname 
            , length(a.FirstName) as l_firstname
            , length(REPLACE(b.NormalizedName, RTRIM(b.NormalizedName, REPLACE(b.NormalizedName, " ", "")), "")) as l_lastname
            , e.NormalizedName AS fieldofstudy
        FROM author_sample AS a
        INNER JOIN (
            SELECT AuthorId, NormalizedName
            FROM Authors
        ) AS b USING(AuthorId)
        INNER JOIN (
            -- ## mark: different from linking graduates. filter on field0
            SELECT AuthorId, NormalizedName
            FROM author_fields c
            INNER JOIN (
                SELECT FieldOfStudyId, NormalizedName
                FROM FieldsOfStudy
            ) AS d USING(FieldOfStudyId)
            WHERE FieldClass = 'main'
                AND FieldOfStudyId IN (?)
        ) AS e USING(AuthorId)
    ) f
    LEFT JOIN (
        SELECT AuthorId
                , main_us_institutions_career as institution
                , coauthors
                , keywords
                , main_us_institutions_year
                , all_us_institutions_year
        FROM author_info_linking
    ) AS g USING(AuthorId)
    
    WHERE length(firstname) > 1 AND f.YearLastPub >= 1985 - 5 AND year <= 2020 + 5 AND institution is not NULL
     

reading from:  /mnt/ssd/DedupeFiles/grants/settings_physics_1985_2020_institutionTrue_fieldofstudy_catFalse_fieldofstudy_strFalse_keywordsFalsechristoph_baseline
Link now ... 
made pairs
calculated scores
made m:1 links
Writing to database...
Running ANALYZE... 

Done in 10.222682925065358 minutes.
